module Day2 exposing (..)


inputRaw =
    """forward 2
forward 6
forward 8
forward 7
down 5
forward 8
forward 9
down 2
forward 6
down 9
forward 1
forward 8
forward 6
forward 7
down 4
down 5
forward 1
up 5
down 7
down 7
down 1
up 2
forward 3
forward 2
forward 2
forward 5
up 5
forward 4
forward 9
forward 6
down 4
down 9
down 2
up 6
forward 9
up 7
forward 7
forward 5
up 3
forward 4
forward 9
up 5
down 3
up 6
down 5
down 4
up 6
forward 9
forward 6
down 9
up 3
down 7
up 1
forward 8
forward 3
forward 8
up 6
forward 7
forward 5
forward 8
up 2
forward 2
forward 7
forward 7
down 1
forward 7
up 7
down 3
forward 9
down 5
down 2
forward 5
forward 1
forward 4
forward 6
up 2
up 7
forward 2
forward 6
forward 7
down 9
up 8
down 9
down 3
up 8
down 3
down 2
up 6
forward 3
forward 9
down 4
forward 5
down 6
up 8
forward 1
down 6
down 6
forward 5
down 6
forward 8
up 7
down 3
forward 7
forward 3
forward 1
forward 4
forward 4
down 3
up 9
up 5
forward 1
down 2
up 4
forward 7
up 4
down 3
down 5
down 8
forward 4
up 8
forward 7
up 3
up 4
up 9
forward 1
forward 1
down 6
forward 1
down 8
up 4
forward 9
forward 9
down 6
forward 9
forward 8
down 2
up 3
up 3
down 9
forward 7
forward 8
down 4
forward 1
up 3
forward 3
down 3
down 9
down 5
up 7
up 2
forward 7
forward 2
forward 5
forward 4
down 7
forward 7
up 1
up 3
down 6
down 4
forward 9
forward 8
down 5
down 4
down 1
down 5
forward 9
forward 8
down 3
forward 5
forward 3
forward 6
down 6
forward 3
up 9
forward 4
down 7
forward 3
forward 7
forward 1
forward 5
down 1
forward 1
down 6
up 7
down 3
forward 2
down 4
forward 6
up 6
forward 8
forward 8
down 5
up 4
forward 7
forward 6
up 4
forward 6
down 1
forward 6
forward 2
up 4
down 6
down 7
forward 4
down 4
forward 1
down 3
forward 5
forward 5
forward 9
forward 3
up 7
down 7
forward 7
forward 5
down 1
down 1
forward 3
down 8
forward 1
forward 2
forward 9
forward 1
forward 3
down 3
up 4
forward 5
down 1
forward 3
up 7
forward 3
forward 6
up 6
up 3
forward 9
forward 5
down 2
up 4
up 3
forward 3
forward 7
down 1
forward 5
forward 5
down 1
forward 4
forward 2
down 1
down 9
down 7
up 1
forward 2
down 2
forward 3
forward 8
forward 4
forward 6
down 4
down 1
forward 5
forward 1
forward 7
down 8
forward 9
down 6
forward 3
up 5
up 1
up 7
down 5
forward 7
forward 5
forward 5
up 1
forward 8
down 8
down 7
forward 9
forward 9
down 3
forward 7
forward 2
down 1
down 6
down 1
forward 7
down 3
forward 1
forward 1
forward 6
forward 6
up 9
down 3
forward 9
down 8
forward 4
up 6
down 4
down 7
forward 5
up 3
forward 1
forward 8
up 6
up 3
down 2
forward 2
forward 5
forward 1
down 8
down 8
down 3
forward 5
forward 4
forward 4
forward 5
up 5
forward 2
forward 5
up 5
forward 6
forward 6
forward 9
up 5
forward 4
up 4
forward 8
down 8
forward 5
forward 2
forward 4
forward 3
forward 1
down 1
down 9
down 2
forward 4
down 3
down 6
forward 2
up 7
forward 6
down 4
up 9
down 1
forward 8
forward 1
forward 1
down 9
down 3
down 2
down 7
up 5
down 7
up 9
down 8
down 7
forward 9
forward 7
up 4
forward 5
up 9
down 4
forward 1
forward 9
down 7
up 9
forward 6
forward 4
up 8
down 2
forward 1
up 6
up 5
down 4
forward 8
down 3
down 5
down 6
up 1
up 9
up 7
up 5
forward 1
forward 3
down 7
forward 9
forward 2
forward 6
down 4
down 7
forward 3
down 1
up 5
forward 3
down 3
down 1
forward 1
forward 4
forward 8
down 4
down 1
forward 3
down 7
up 9
down 8
down 1
forward 2
down 6
down 9
down 9
forward 2
forward 8
up 2
down 5
down 9
forward 1
up 9
down 7
forward 8
down 7
up 4
forward 8
down 8
down 7
forward 6
up 7
down 4
down 9
forward 9
up 8
down 8
down 8
down 8
down 5
forward 2
up 9
down 2
up 7
down 7
down 3
down 6
forward 9
forward 1
down 1
down 5
up 4
down 5
forward 5
up 2
forward 5
down 5
forward 1
forward 9
down 9
forward 3
forward 3
down 8
down 2
down 8
forward 8
forward 7
up 6
down 4
down 5
forward 8
forward 4
forward 7
forward 1
down 9
down 4
down 2
forward 5
down 3
down 7
down 5
forward 8
up 1
down 4
down 7
down 7
forward 2
up 5
forward 5
up 2
up 4
down 9
forward 7
forward 6
forward 6
down 2
forward 7
forward 7
down 7
forward 8
down 2
up 9
down 1
forward 9
down 9
forward 3
down 9
down 2
forward 9
forward 8
down 7
up 2
forward 8
forward 1
up 2
down 7
up 7
down 8
up 1
up 4
up 2
up 3
down 7
forward 1
down 8
down 4
down 2
down 4
up 8
forward 8
down 2
up 5
up 4
forward 7
up 1
forward 3
down 8
down 4
forward 4
down 8
forward 2
down 1
up 9
forward 9
down 4
up 2
down 8
up 9
forward 6
down 7
up 7
forward 9
forward 1
down 8
forward 5
down 9
forward 6
down 9
forward 9
forward 1
down 8
up 4
forward 9
forward 3
down 9
up 8
forward 4
up 8
forward 7
down 7
up 6
down 7
down 2
down 7
forward 3
forward 2
down 6
down 2
down 7
up 4
forward 5
down 5
forward 2
up 3
up 8
forward 8
forward 1
forward 7
down 7
down 2
forward 1
down 7
down 7
up 2
up 7
up 7
forward 4
down 5
forward 5
forward 7
forward 7
down 7
down 8
forward 8
forward 8
up 3
up 9
forward 2
down 7
up 3
up 1
up 1
down 9
up 5
down 6
up 8
up 3
up 5
forward 7
forward 3
forward 8
forward 4
up 1
forward 2
forward 1
up 5
forward 9
forward 8
down 7
up 1
forward 7
down 8
forward 1
forward 9
forward 9
forward 9
forward 8
down 1
forward 8
forward 7
up 9
up 3
forward 8
forward 2
up 2
down 7
down 6
forward 4
forward 3
forward 6
up 7
down 9
forward 1
forward 4
down 1
forward 4
up 3
down 8
forward 1
up 6
forward 8
forward 2
forward 1
forward 8
forward 4
down 7
forward 4
forward 6
down 2
up 4
forward 4
forward 3
down 5
forward 8
forward 4
forward 5
forward 7
forward 6
forward 5
forward 9
down 4
down 9
forward 6
up 7
down 6
down 3
down 2
up 9
forward 7
down 4
down 5
forward 2
forward 3
forward 2
forward 9
forward 7
forward 8
down 9
down 7
down 9
down 7
forward 5
forward 2
down 5
forward 6
down 1
down 2
down 6
forward 9
down 3
up 6
down 4
down 5
forward 3
forward 7
down 8
forward 2
forward 5
down 9
down 3
up 5
down 6
forward 6
up 3
down 6
down 1
down 8
down 5
down 3
forward 3
up 6
up 7
forward 8
forward 9
forward 2
forward 6
forward 2
forward 3
down 7
down 3
down 3
down 6
down 2
forward 4
forward 3
forward 8
up 1
down 9
forward 5
up 3
down 7
down 6
forward 8
forward 1
up 6
forward 3
forward 1
up 9
forward 6
forward 3
down 9
down 4
down 9
forward 5
down 8
down 3
forward 1
forward 1
down 9
down 6
down 3
up 7
down 3
forward 5
down 2
forward 7
forward 2
forward 5
up 7
forward 4
forward 4
up 3
down 6
down 7
up 1
down 6
forward 1
forward 9
down 7
down 8
forward 5
down 1
down 9
up 5
up 4
up 3
forward 6
down 6
forward 4
forward 8
up 6
up 2
down 9
forward 2
forward 5
forward 1
forward 3
forward 9
up 3
forward 2
forward 1
forward 3
forward 3
up 9
forward 3
forward 7
down 6
forward 2
down 8
up 9
forward 8
forward 5
forward 2
up 8
down 9
up 5
forward 3
down 4
forward 1
up 9
down 4
down 5
up 4
down 6
down 4
down 6
down 4
forward 4
down 2
down 1
down 6
forward 2
down 1
down 3
forward 4
down 3
down 5
down 5
up 1
up 4
down 4
down 4
down 5
down 4
down 5
forward 5
down 8
down 5
down 5
down 9
up 1
up 5
forward 5
down 1
down 9
down 4
down 3
forward 3
down 2
forward 9
down 3
forward 1
down 9
down 5
up 7
forward 3
forward 1
forward 2
down 5
forward 8
down 3
down 3
forward 6
down 8
down 3
down 8
up 9
forward 3
down 6
forward 4
down 6
down 4
up 5
forward 1
up 6
up 2
forward 2
down 8
forward 7
forward 8
down 6
down 7
forward 7
up 3
forward 3
up 6
forward 3
down 1
down 7
forward 9
forward 5
up 1
forward 7
forward 1
down 3
forward 1
up 4
up 2
up 1
down 8
forward 9
forward 3
forward 4
up 7
forward 5
down 1
down 8
down 3
down 4
down 6
down 5
forward 4
down 4
down 2
down 4
down 3
down 3
forward 4
up 3
forward 6
down 7
forward 4
up 2
down 7
forward 8
up 9
forward 6
forward 8
down 1
down 6
forward 6
down 6
down 9
up 8
forward 8
up 5
forward 6
forward 9
forward 4
up 2
forward 3
down 7
down 8
down 4
up 8
forward 8
forward 1
up 5
up 4
up 1
down 9
down 9
up 2
forward 9
down 7
down 2
up 2
down 1
forward 6
forward 2
down 5
down 8
forward 6
down 2
down 3
forward 6
forward 7
up 8
down 4
forward 5
down 9
down 2
down 7
down 9
down 5
forward 9
forward 2
down 6
forward 7
up 6
forward 3
up 2
forward 9
forward 2"""


input =
    String.lines inputRaw
        |> List.map toDirection


type Direction
    = Forward Int
    | Down Int
    | Up Int
    | InvalidMove


toDirection : String -> Direction
toDirection string =
    let
        parseInt str =
            case List.tail (String.words str) of
                Just [ tail ] ->
                    tail |> (String.toInt >> Maybe.withDefault 0)

                _ ->
                    0
    in
    if String.startsWith "forward" string then
        Forward (parseInt string)

    else if String.startsWith "down" string then
        Down (parseInt string)

    else if String.startsWith "up" string then
        Up (parseInt string)

    else
        InvalidMove


run1_ : List Direction -> ( Int, Int ) -> ( Int, Int )
run1_ dirlist ( fwd, depth ) =
    case dirlist of
        [] ->
            ( fwd, depth )

        head :: tail ->
            case head of
                Forward val ->
                    run1_ tail ( fwd + val, depth )

                Up val ->
                    run1_ tail ( fwd, depth - val )

                Down val ->
                    run1_ tail ( fwd, depth + val )

                _ ->
                    run1_ tail ( fwd, depth )


tupleProduct : ( Int, Int ) -> Int
tupleProduct ( a, b ) =
    a * b


tupleProduct2 ( a, b, c ) =
    a * b


run2_ : List Direction -> ( Int, Int, Int ) -> ( Int, Int, Int )
run2_ dirlist ( fwd, depth, aim ) =
    case dirlist of
        [] ->
            ( fwd, depth, aim )

        head :: tail ->
            case head of
                Forward val ->
                    run2_ tail ( fwd + val, depth + (aim * val), aim )

                Up val ->
                    run2_ tail ( fwd, depth, aim - val )

                Down val ->
                    run2_ tail ( fwd, depth, aim + val )

                _ ->
                    run2_ tail ( fwd, depth, aim )


run1 =
    run1_ input ( 0, 0 ) |> tupleProduct


run2 =
    run2_ input ( 0, 0, 0 ) |> tupleProduct2
